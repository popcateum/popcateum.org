{"version":3,"sources":["components/layout/Header.jsx","components/content/main/Banner.jsx","components/content/main/Gpop.jsx","components/content/main/Mining.jsx","components/content/main/Wallet.jsx","components/content/main/Develop.jsx","components/content/main/EasterEgg.jsx","views/Main.jsx","components/layout/Body.jsx","components/layout/Footer.jsx","App.jsx","index.js"],"names":["primary","brown","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","appBar","background","Header","classes","className","AppBar","position","Toolbar","Typography","variant","mainColor","banner","content","marginTop","typoTitle","marginLeft","color","typoContent","margin","buttonstyle","marginBottom","btnLink","Banner","Grid","container","direction","alignItems","justify","src","width","alt","component","Button","style","border","textTransform","fontSize","href","startIcon","icon","faComments","target","backgroundColor","faTwitter","faTelegramPlane","paddingTop","imgStyle","version","pkg","releaseLink","windows","macos","linux","github","Gpop","item","lg","md","sm","faWindows","faLinux","faApple","faGithub","typoSub","cmdStyle","divCmdStyle","padding","command","Mining","xs","Link","typoContent2","typoContent3","connect","a","window","ethereum","request","method","params","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","alert","Wallet","onClick","typoDocsTitle","typoDocs","cardDocs","height","linkList","Develop","Paper","elevation","filedStyle","filedStyleText","filedStyle2","EasterEgg","useState","text","setText","hash","setHash","address","setAddress","TextField","label","multiline","rows","value","onChange","e","sha256","privateKeyToAddress","disabled","Main","Body","Copyright","align","Date","getFullYear","footer","palette","type","grey","Footer","Container","maxWidth","IconButton","faFacebookF","faInstagram","faTelegram","faDiscord","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2a17ba4.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport brown from '@material-ui/core/colors/brown'\n\nconst primary = brown[800]\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBar: {\n    background: primary,\n  },\n}))\n\nconst Header = () => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            <b>POPCATEUM</b>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport brown from '@material-ui/core/colors/brown'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTwitter, faTelegramPlane } from '@fortawesome/free-brands-svg-icons'\nimport { faComments } from '@fortawesome/free-solid-svg-icons'\n\nconst primary = brown[50]\nconst mainColor = brown[800]\n\nconst useStyles = makeStyles((theme) => ({\n  banner: {\n    background: primary,\n  },\n  content: {\n    marginTop: theme.spacing(13),\n  },\n  typoTitle: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    color: mainColor,\n  },\n  typoContent: {\n    margin: theme.spacing(2),\n    color: mainColor,\n  },\n  buttonstyle: {\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n}))\n\nconst btnLink = {\n  forum: 'https://forum.popcateum.org',\n  twitter: 'https://twitter.com/popcateum',\n  telegram: 'https://t.me/popcateumofficial',\n}\n\nconst Banner = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <div className={classes.banner}>\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n          <img\n            className={classes.content}\n            src=\"/images/Popcat.png\"\n            width=\"150\"\n            alt=\"popcateum-logo\"\n          />\n          <Typography className={classes.typoTitle} variant=\"h3\" component=\"h2\">\n            <b>Popcateum Everywhere!</b>\n          </Typography>\n          <Typography className={classes.typoContent} variant=\"h6\">\n            Popcateum is the community-run technology powering the\n            cryptocurrency,\n            <br />\n            popcat (POP) and thousands of decentralized applications.\n          </Typography>\n          <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n            <Button\n              variant=\"outlined\"\n              className={classes.buttonstyle}\n              style={{\n                color: '#4e342e',\n                border: '1px solid #4e342e7f',\n                textTransform: 'none',\n                fontSize: '14px',\n              }}\n              href={btnLink.forum}\n              color=\"primary\"\n              startIcon={<FontAwesomeIcon icon={faComments} />}\n              target=\"_blank\"\n            >\n              <b>Forum</b>\n            </Button>\n            <Button\n              className={classes.buttonstyle}\n              style={{\n                backgroundColor: '#00a2ed',\n                textTransform: 'none',\n                fontSize: '14px',\n              }}\n              href={btnLink.twitter}\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<FontAwesomeIcon icon={faTwitter} />}\n              target=\"_blank\"\n            >\n              Twitter\n            </Button>\n            <Button\n              className={classes.buttonstyle}\n              style={{\n                backgroundColor: '#0088cc',\n                textTransform: 'none',\n                fontSize: '14px',\n              }}\n              href={btnLink.telegram}\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<FontAwesomeIcon icon={faTelegramPlane} />}\n              target=\"_blank\"\n            >\n              Telegram\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  )\n}\n\nexport default Banner\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faWindows,\n  faLinux,\n  faApple,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons'\nimport brown from '@material-ui/core/colors/brown'\nimport pkg from '../../../../package.json'\n\nconst primary = brown[50]\nconst mainColor = brown[800]\n\n// const redTheme = createMuiTheme({ palette: { primary: brown } })\n\nconst useStyles = makeStyles((theme) => ({\n  banner: {\n    background: primary,\n  },\n  content: {\n    paddingTop: theme.spacing(13),\n  },\n  typoTitle: {\n    marginTop: theme.spacing(5),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    color: mainColor,\n  },\n  typoContent: {\n    margin: theme.spacing(3),\n  },\n  imgStyle: {\n    marginBottom: theme.spacing(5),\n  },\n  buttonstyle: {\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}))\n\nconst version = pkg.version\n\nconst releaseLink = {\n  windows:\n    `https://github.com/popcateum/go-popcateum/releases/download/v${version}/gpop-windows-amd64-${version}.zip`,\n  macos:\n    `https://github.com/popcateum/go-popcateum/releases/download/v${version}/gpop-darwin-amd64-${version}.tar.gz`,\n  linux:\n    `https://github.com/popcateum/go-popcateum/releases/download/v${version}/gpop-linux-amd64-${version}.tar.gz`,\n  github: 'https://github.com/popcateum/go-popcateum',\n}\n\nconst Gpop = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <div>\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n          <Grid item lg={7} md={10} sm={12}>\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Typography className={classes.typoTitle} variant=\"h4\">\n                <b>Go Popcateum</b>\n              </Typography>\n              <Typography className={classes.typoContent} variant=\"h6\">\n                Official Go implementation of the Popcateum protocol. Go\n                Popcateum is one of the three original implementations (along\n                with C++ and Python) of the Popcateum protocol. It is written in\n                Go, fully open source and licensed under the GNU LGPL v3.\n              </Typography>\n              <Typography className={classes.typoContent} variant=\"h6\">\n                Gpop \n                <br />\n                v{version}\n              </Typography>\n              <img\n                className={classes.imgStyle}\n                src=\"/images/gpop.png\"\n                width=\"150\"\n                alt=\"gpop-logo\"\n              />\n              <Grid\n                container\n                direction=\"row\"\n                alignItems=\"center\"\n                justify=\"center\"\n              >\n                <Button\n                  className={classes.buttonstyle}\n                  style={{\n                    backgroundColor: '#00a2ed',\n                    textTransform: 'none',\n                    fontSize: \"14px\"\n                  }}\n                  href={releaseLink.windows}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<FontAwesomeIcon icon={faWindows} />}\n                >\n                  Windows\n                </Button>\n                <Button\n                  className={classes.buttonstyle}\n                  style={{\n                    backgroundColor: '#048c2c',\n                    textTransform: 'none',\n                    fontSize: \"14px\"\n                  }}\n                  href={releaseLink.linux}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<FontAwesomeIcon icon={faLinux} />}\n                >\n                  Linux\n                </Button>\n                <Button\n                  className={classes.buttonstyle}\n                  style={{\n                    backgroundColor: '#666666',\n                    textTransform: 'none',\n                    fontSize: \"14px\"\n                  }}\n                  href={releaseLink.macos}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<FontAwesomeIcon icon={faApple} />}\n                >\n                  macOS\n                </Button>\n                <Button\n                  className={classes.buttonstyle}\n                  style={{\n                    backgroundColor: '#211F1F',\n                    textTransform: 'none',\n                    fontSize: \"14px\"\n                  }}\n                  target=\"_blank\"\n                  href={releaseLink.github}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<FontAwesomeIcon icon={faGithub} />}\n                >\n                  Github\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  )\n}\n\nexport default Gpop\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Link from '@material-ui/core/Link'\nimport brown from '@material-ui/core/colors/brown'\n\nconst primary = brown[50]\nconst mainColor = brown[800]\n\nconst useStyles = makeStyles((theme) => ({\n  banner: {\n    background: primary,\n    marginTop: theme.spacing(10),\n  },\n  content: {\n    paddingTop: theme.spacing(13),\n  },\n  typoTitle: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    color: mainColor,\n  },\n  typoContent: {\n    margin: theme.spacing(3),\n  },\n  typoSub: {\n    margin: theme.spacing(2),\n  },\n  imgStyle: {\n    width: '90%',\n  },\n  cmdStyle: {},\n  divCmdStyle: {\n    backgroundColor: '#e0e0e0',\n    padding: theme.spacing(3),\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst command = {\n  init: './gpop --syncmode \"full\" --http --http.port 9506 console',\n  coinbase: 'personal.newAccount(\"your_password\")',\n  start: 'miner.start(1)',\n  minerG: './ethminer -G -P http://127.0.0.1:9506',\n  minerU: './ethminer -U -P http://127.0.0.1:9506',\n}\n\nconst ethminerLink = 'https://github.com/ethereum-mining/ethminer/releases/tag/v0.18.0'\nconst explorerLink = \"https://explorer.popcateum.org\"\n\n\nconst Mining = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <div className={classes.banner}>\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n          <Grid item lg={7} md={10} sm={12}>\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Typography className={classes.typoTitle} variant=\"h4\">\n                <b>Mining 'POP'</b>\n              </Typography>\n              <Grid item xs={12}>\n                <Grid\n                  container\n                  direction=\"column\"\n                  alignItems=\"center\"\n                  justify=\"center\"\n                >\n                  <img\n                    className={classes.imgStyle}\n                    src=\"/images/mining.png\"\n                    alt=\"mining\"\n                  />\n                </Grid>\n              </Grid>\n              <Typography className={classes.typoContent} variant=\"h6\">\n                1 popcat (POP) = 1,000,000,000,000,000,000 wei.\n                <br />\n                You can mine popcat using gpop! Popcateum rewards 50 popcat for\n                each block you create. Also, you can use GPU to mine by\n                connecting Ethminer and Gpop. Popcateum recommends using <Link target=\"_blank\" href={ethminerLink}>Ethminer v0.18.0</Link>.\n                <br />\n                And You can check the blockchain <Link target=\"_blank\" href={explorerLink}>Popcateum Explorer</Link>.\n              </Typography>\n              <Grid item>\n                <Typography className={classes.typoSub} variant=\"subtitle1\">\n                  1. In the directory where Gpop is located, enter the command\n                  below and synchronize it with the Popcateum main network.\n                </Typography>\n                <div className={classes.divCmdStyle}>{command.init}</div>\n                <Typography className={classes.typoSub} variant=\"subtitle1\">\n                  2. Make a wallet for mining rewards. Don't lose your password!\n                </Typography>\n                <div className={classes.divCmdStyle}>{command.coinbase}</div>\n                <Typography className={classes.typoSub} variant=\"subtitle1\">\n                  3. Start mining in Gpop. If it is the first mining, it can be\n                  mined after DAG is created.\n                </Typography>\n                <div className={classes.divCmdStyle}>{command.start}</div>\n                <Typography className={classes.typoSub} variant=\"subtitle1\">\n                  4. In the directory where Ethminer is located, enter the\n                  command below to connect it to GPU mining in Gpop. If your\n                  computer GPU is a Radeon, please use the -G option and the\n                  -U option if it's Ndivia, please use the -U option. (For\n                  Radeon GPUs, using too recent graphics card drivers may not be\n                  able to mine.)\n                </Typography>\n                <div className={classes.divCmdStyle}>\n                  {command.minerG}\n                  <p></p>\n                  or\n                  <p></p>\n                  {command.minerU}\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  )\n}\n\nexport default Mining\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Link from '@material-ui/core/Link'\nimport Button from '@material-ui/core/Button'\n\nimport brown from '@material-ui/core/colors/brown'\n\nconst primary = brown[50]\nconst mainColor = brown[800]\n\nconst useStyles = makeStyles((theme) => ({\n  banner: {\n    background: primary,\n    marginTop: theme.spacing(10),\n  },\n  content: {\n    paddingTop: theme.spacing(13),\n  },\n  typoTitle: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    color: mainColor,\n  },\n  typoContent: {\n    margin: theme.spacing(3),\n  },\n  typoContent2: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  typoContent3: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  imgStyle: {\n    width: '90%',\n  },\n  buttonstyle: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst metamaskLink =\n  'https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn'\nconst metaAppstore =\n  'https://apps.apple.com/us/app/metamask-blockchain-wallet/id1438144202'\nconst metaPlaystore =\n  'https://play.google.com/store/apps/details?id=io.metamask'\n\nasync function connect() {\n  try {\n    await window.ethereum.request({\n      method: 'wallet_addEthereumChain',\n      params: [\n        {\n          chainId: '0x4bd',\n          chainName: 'Popcateum',\n          nativeCurrency: {\n            name: 'Popcat',\n            symbol: 'POP',\n            decimals: 18,\n          },\n          rpcUrls: ['https://dataseed.popcateum.org'],\n          blockExplorerUrls: ['https://explorer.popcateum.org'],\n        },\n      ],\n    })\n  } catch (error) {\n    alert('Metamask must be installed.')\n  }\n}\n\nconst Wallet = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <div>\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n          <Grid item lg={7} md={10} sm={12}>\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Typography className={classes.typoTitle} variant=\"h4\">\n                <b>Wallet</b>\n              </Typography>\n              <Typography className={classes.typoContent} variant=\"h6\">\n                Popcateum can send POP to others using Metamask and Gpop. Please\n                install the{' '}\n                <Link target=\"_blank\" href={metamaskLink}>\n                  Metamask\n                </Link>{' '}\n                which is Google Chrome extension and do as below.\n                <br />\n                And You can install a Metamask app on your smartphone.\n                <br />\n                <Link target=\"_blank\" href={metaAppstore}>\n                  App Store\n                </Link>{' '}\n                or{' '}\n                <Link target=\"_blank\" href={metaPlaystore}>\n                  Play Store\n                </Link>\n              </Typography>\n              <Grid\n                container\n                direction=\"row\"\n                alignItems=\"center\"\n                justify=\"center\"\n              >\n                <Grid item lg={4} md={4} sm={4} xs={12}>\n                  <Grid\n                    container\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    justify=\"center\"\n                  >\n                    <img\n                      className={classes.imgStyle}\n                      src=\"/images/metaadd.png\"\n                      alt=\"mining\"\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item lg={8} md={8} sm={8} xs={12}>\n                  <Typography\n                    className={classes.typoContent3}\n                    variant=\"subtitle1\"\n                  >\n                    1. Select a Custom RPC from the network menu of the Metamask\n                    and add the network as shown next to it.\n                  </Typography>\n                  <Button\n                    className={classes.buttonstyle}\n                    style={{\n                      backgroundColor: '#4E342E',\n                      textTransform: 'none',\n                      fontSize: '14px',\n                    }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={connect}\n                  >\n                    Fast Connect\n                  </Button>\n                  <Typography\n                    className={classes.typoContent}\n                    variant=\"subtitle1\"\n                  >\n                    2. In Import Account, select Type as JSON file and insert\n                    json key file generated by Gpop. Enter the password as well.\n                    <br />\n                    (The json key file is located in\n                    '~/Appdata/local/popcateum/keystore' for Windows users and\n                    '~/.popcateum/keystore' for Linux or Mac users.)\n                    <br />\n                    (You may not be able to bring your wallet normally due to\n                    the Metamask own bug. In that case, please use Firefox\n                    Metamask)\n                  </Typography>\n                  <Typography\n                    className={classes.typoContent}\n                    variant=\"subtitle1\"\n                  >\n                    3. Click Send from Metamask, enter the wallet to receive the\n                    POP, enter the amount of POP to send, and send it.\n                  </Typography>\n                </Grid>\n                <Typography className={classes.typoContent} variant=\"subtitle1\">\n                  We are currently developing a wallet app dedicated to\n                  popcateum. Please wait a little bit!\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  )\n}\n\nexport default Wallet\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Link from '@material-ui/core/Link'\nimport brown from '@material-ui/core/colors/brown'\n\nconst primary = brown[50]\nconst mainColor = brown[800]\n\nconst useStyles = makeStyles((theme) => ({\n  banner: {\n    background: primary,\n    marginTop: theme.spacing(10),\n  },\n  content: {\n    paddingTop: theme.spacing(13),\n  },\n  typoTitle: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    color: mainColor,\n  },\n  typoDocsTitle: {\n    marginBottom: theme.spacing(3),\n  },\n  typoDocs: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(6),\n  },\n  cardDocs: {\n    background: 'none',\n  },\n  typoContent: {\n    margin: theme.spacing(3),\n  },\n  imgStyle: {\n    // width: '40%',\n    height: '120px',\n  },\n}))\n\nconst linkList = {\n  solidity: 'https://docs.soliditylang.org/',\n  web3: 'https://web3js.readthedocs.io/',\n  truffle: 'https://www.trufflesuite.com/docs/truffle/overview',\n  geth: 'https://geth.ethereum.org/docs/',\n}\n\nconst Develop = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <div className={classes.banner}>\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n          <Grid item lg={7} md={10} sm={12}>\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Typography className={classes.typoTitle} variant=\"h4\">\n                <b>Development</b>\n              </Typography>\n              <Typography className={classes.typoContent} variant=\"h6\">\n                Popcateum is a public blockchain platform. Create smart\n                contracts with Solidity and deploy them to Popcateum main\n                networks. You can use web3, truffle, etc., which is a\n                development tool that Ethereum used before.\n              </Typography>\n              <Grid\n                container\n                direction=\"row\"\n                alignItems=\"center\"\n                justify=\"center\"\n              >\n                <Grid item lg={3} md={3} sm={6} xs={6}>\n                  <Paper className={classes.cardDocs} elevation={0}>\n                    <Grid\n                      container\n                      direction=\"column\"\n                      alignItems=\"center\"\n                      justify=\"flex-start\"\n                    >\n                      <Typography\n                        className={classes.typoDocsTitle}\n                        variant=\"h5\"\n                      >\n                        Solidity\n                      </Typography>\n                      <img\n                        className={classes.imgStyle}\n                        src=\"/images/logo-solidity.png\"\n                        alt=\"mining\"\n                      />\n                      <Typography\n                        className={classes.typoDocs}\n                        variant=\"subtitle1\"\n                      >\n                        <Link target=\"_blank\" href={linkList.solidity}>\n                          Documents\n                        </Link>\n                      </Typography>\n                    </Grid>\n                  </Paper>\n                </Grid>\n                <Grid item lg={3} md={3} sm={6} xs={6}>\n                  <Paper className={classes.cardDocs} elevation={0}>\n                    <Grid\n                      container\n                      direction=\"column\"\n                      alignItems=\"center\"\n                      justify=\"flex-start\"\n                    >\n                      <Typography\n                        className={classes.typoDocsTitle}\n                        variant=\"h5\"\n                      >\n                        Web3.js\n                      </Typography>\n                      <img\n                        className={classes.imgStyle}\n                        src=\"/images/logo-web3.png\"\n                        alt=\"mining\"\n                      />\n                      <Typography\n                        className={classes.typoDocs}\n                        variant=\"subtitle1\"\n                      >\n                        <Link target=\"_blank\" href={linkList.web3}>\n                          Documents\n                        </Link>\n                      </Typography>\n                    </Grid>\n                  </Paper>\n                </Grid>\n                <Grid item lg={3} md={3} sm={6} xs={6}>\n                  <Paper className={classes.cardDocs} elevation={0}>\n                    <Grid\n                      container\n                      direction=\"column\"\n                      alignItems=\"center\"\n                      justify=\"flex-start\"\n                    >\n                      <Typography\n                        className={classes.typoDocsTitle}\n                        variant=\"h5\"\n                      >\n                        Truffle\n                      </Typography>\n                      <img\n                        className={classes.imgStyle}\n                        src=\"/images/logo-truffle.png\"\n                        alt=\"mining\"\n                      />\n                      <Typography\n                        className={classes.typoDocs}\n                        variant=\"subtitle1\"\n                      >\n                        <Link target=\"_blank\" href={linkList.truffle}>\n                          Documents\n                        </Link>\n                      </Typography>\n                    </Grid>\n                  </Paper>\n                </Grid>\n                <Grid item lg={3} md={3} sm={6} xs={6}>\n                  <Paper className={classes.cardDocs} elevation={0}>\n                    <Grid\n                      container\n                      direction=\"column\"\n                      alignItems=\"center\"\n                      justify=\"flex-start\"\n                    >\n                      <Typography\n                        className={classes.typoDocsTitle}\n                        variant=\"h5\"\n                      >\n                        Geth\n                      </Typography>\n                      <img\n                        className={classes.imgStyle}\n                        src=\"/images/logo-geth.png\"\n                        alt=\"mining\"\n                      />\n                      <Typography\n                        className={classes.typoDocs}\n                        variant=\"subtitle1\"\n                      >\n                        <Link target=\"_blank\" href={linkList.geth}>\n                          Documents\n                        </Link>\n                      </Typography>\n                    </Grid>\n                  </Paper>\n                </Grid>\n              </Grid>\n              <Typography className={classes.typoContent} variant=\"subtitle1\">\n                If you want to distribute the dapp on the main net of Popcateum,\n                but you don't have a POP, please send an email to our\n                team.(popcateum@gmail.com)\n                <br />\n                We are sending you a little POP!\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  )\n}\n\nexport default Develop\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport brown from '@material-ui/core/colors/brown'\n\nimport sha256 from 'sha256'\nimport privateKeyToAddress from 'ethereum-private-key-to-address'\n\nconst primary = brown[50]\nconst mainColor = brown[800]\n\nconst useStyles = makeStyles((theme) => ({\n  banner: {\n    background: primary,\n    marginTop: theme.spacing(10),\n  },\n  content: {\n    paddingTop: theme.spacing(13),\n  },\n  typoTitle: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    color: mainColor,\n  },\n  typoContent: {\n    margin: theme.spacing(3),\n  },\n  imgStyle: {\n    width: '90%',\n  },\n  filedStyle: {\n    width: '95.6%',\n    margin: theme.spacing(1),\n    // marginBottom: theme.spacing(4),\n  },\n  filedStyleText: {\n    width: '97%',\n    margin: theme.spacing(1),\n  },\n  filedStyle2: {\n    width: '95.6%',\n    margin: theme.spacing(1),\n  },\n}))\n\nconst EasterEgg = () => {\n  const classes = useStyles()\n  const [text, setText] = useState('')\n  const [hash, setHash] = useState('')\n  const [address, setAddress] = useState('')\n\n  const textChange = (e) => {\n    setText(e.target.value)\n    setHash(sha256(e.target.value))\n    setAddress(privateKeyToAddress(sha256(e.target.value)))\n  }\n\n  return (\n    <>\n      <div>\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n          <Grid item lg={7} md={10} sm={12}>\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Typography className={classes.typoTitle} variant=\"h4\">\n                <b>Easter Egg</b>\n              </Typography>\n              <Typography className={classes.typoContent} variant=\"h6\">\n                POPCATEUM EVERYWHERE!\n                <br />\n                Type in what you think. There may be a POP in the wallet\n                address! Popcateum has a total of 1001 Easter egg wallet\n                addresses. If you're lucky, you might find a wallet address with\n                10 million POP in it!\n                <br />\n                Follow our SNS and you can find hints about Easter Egg!\n              </Typography>\n              <Grid\n                container\n                direction=\"row\"\n                alignItems=\"center\"\n                justify=\"center\"\n              >\n                <Grid item lg={4} md={4} sm={4} xs={12}>\n                  <Grid\n                    container\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    justify=\"center\"\n                  >\n                    <TextField\n                      className={classes.filedStyleText}\n                      label=\"Text\"\n                      multiline\n                      rows={5}\n                      variant=\"outlined\"\n                      value={text}\n                      onChange={textChange}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item lg={8} md={8} sm={8} xs={12}>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    justify=\"center\"\n                  >\n                    <TextField\n                      className={classes.filedStyle}\n                      disabled\n                      label=\"Private Key\"\n                      rows={1}\n                      variant=\"outlined\"\n                      value={hash}\n                    />\n                    <TextField\n                      className={classes.filedStyle2}\n                      disabled\n                      label=\"Address\"\n                      rows={1}\n                      variant=\"outlined\"\n                      value={address}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Typography className={classes.typoContent} variant=\"subtitle1\">\n                NOTICE!!! If you found the Easter egg wallet address, please\n                send the POP in the address to your personal wallet address!\n                Otherwise, someone might take the POP!\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  )\n}\n\nexport default EasterEgg\n","import React from 'react'\nimport Banner from '../components/content/main/Banner'\nimport Gpop from '../components/content/main/Gpop'\nimport Mining from '../components/content/main/Mining'\nimport Wallet from '../components/content/main/Wallet'\nimport Develop from '../components/content/main/Develop'\nimport EasterEgg from '../components/content/main/EasterEgg'\n\nconst Main = () => {\n  return (\n    <>\n      <Banner />\n      <Gpop />\n      <Mining />\n      <Wallet />\n      <Develop />\n      <EasterEgg />\n    </>\n  )\n}\n\nexport default Main","import React from 'react'\nimport Main from '../../views/Main'\n\nconst Body = () => {\n  return (\n    <>\n      <Main />\n    </>\n  )\n}\n\nexport default Body","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Link from '@material-ui/core/Link'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faTwitter,\n  faFacebookF,\n  faDiscord,\n  faInstagram,\n  faTelegram,\n} from '@fortawesome/free-brands-svg-icons'\nimport { Grid } from '@material-ui/core'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://popcateum.org/\">\n        POPCATEUM\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    padding: theme.spacing(6, 0),\n    marginTop: 'auto',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n}))\n\nconst linkList = {\n  twitter: 'https://twitter.com/popcateum',\n  facebook: 'https://www.facebook.com/Popcateum',\n  instagram: 'https://www.instagram.com/popcateum/',\n  reddit: 'https://www.reddit.com/r/popcateum/',\n  discord: 'https://discord.gg/tPNHNvPZA4',\n  kakao: 'https://open.kakao.com/o/gfr57tgd',\n  telegram: 'https://t.me/popcateumofficial',\n  notion: 'https://www.notion.so/Popcateum-f2a855933729447f99ff48912e0d9622'\n}\n\nconst Footer = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <footer className={classes.footer}>\n        <Container maxWidth=\"sm\">\n          <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n            <IconButton\n              aria-label=\"twitter\"\n              target=\"_blank\"\n              href={linkList.twitter}\n            >\n              <FontAwesomeIcon icon={faTwitter} />\n            </IconButton>\n            <IconButton\n              aria-label=\"facebook\"\n              target=\"_blank\"\n              href={linkList.facebook}\n            >\n              <FontAwesomeIcon icon={faFacebookF} />\n            </IconButton>\n            <IconButton\n              aria-label=\"instagram\"\n              target=\"_blank\"\n              href={linkList.instagram}\n            >\n              <FontAwesomeIcon icon={faInstagram} />\n            </IconButton>\n            <IconButton\n              aria-label=\"telegram\"\n              target=\"_blank\"\n              href={linkList.telegram}\n            >\n              <FontAwesomeIcon icon={faTelegram} />\n            </IconButton>\n            <IconButton\n              aria-label=\"kakao\"\n              target=\"_blank\"\n              href={linkList.kakao}\n            >\n              <img width=\"23.5px\" src=\"/images/kakao.svg\" alt=\"kakao\" />\n            </IconButton>\n            <IconButton\n              aria-label=\"notion\"\n              target=\"_blank\"\n              href={linkList.notion}\n            >\n              <img width=\"23.5px\" src=\"/images/notion.svg\" alt=\"notion\" />\n            </IconButton>\n            <IconButton\n              aria-label=\"discord\"\n              target=\"_blank\"\n              href={linkList.discord}\n            >\n              <FontAwesomeIcon icon={faDiscord} />\n            </IconButton>\n          </Grid>\n          <Typography variant=\"body1\" align=\"center\">\n            Popcateum Project\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n    </>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport Header from './components/layout/Header'\nimport Body from './components/layout/Body'\nimport Footer from './components/layout/Footer'\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Body />\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}